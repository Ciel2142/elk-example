version: '2.0'
services:
  elasticsearch:
    container_name: elasticsearch
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
#        SG_VERSION: $SG_VERSION
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTIC_PASSWORD=$ELK_PASSWORD
      - ELASTIC_USERNAME=$ELK_USERNAME
#      - http.cors.allow-origin=*
    #  PFrYZ95pn4JRCuz483v1
    ulimits:
      memlock:
        soft: -1
        hard: -1

    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: bind
        source: ./elasticsearch/storage
        target: /usr/share/elasticsearch/data

    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elastic

  kibana:
    container_name: kibana
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    ports:
      - 5601:5601
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
#      - ./kibana/config:/usr/share/kibana/config
    environment:
      - ELASTICSEARCH_USERNAME=$ELK_USERNAME
      - ELASTICSEARCH_PASSWORD=$ELK_PASSWORD
    networks:
      - elastic
    depends_on:
      - elasticsearch

  logstash:
    container_name: logstash
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
      - type: bind
        source: ./logstash/data/queue
        target: /usr/share/logstash/data/queue
    environment:
      - ES_USER=$ELK_USERNAME
      - ES_PASSWORD=$ELK_PASSWORD
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
    ports:
      - "5000:5000"
    networks:
      - elastic
    depends_on:
      - elasticsearch

  curator:
    build:
      context: extensions/curator/
      args:
        CRON_CURATOR: $CRON_CURATOR
    init: true
    volumes:
      - type: bind
        source: ./extensions/curator/config/curator.yml
        target: /usr/share/curator/config/curator.yml
        read_only: true
      - type: bind
        source: ./extensions/curator/config/delete_log_files_curator.yml
        target: /usr/share/curator/config/delete_log_files_curator.yml
        read_only: true
    depends_on:
      - elasticsearch
    networks:
      - elastic

networks:
  elastic:
    driver: bridge
